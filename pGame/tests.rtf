{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red255\green236\blue16;\red248\green255\blue248;\red77\green177\blue255;
\red0\green203\blue228;\red223\green20\blue117;\red43\green217\blue170;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 //create an example board\cf3 \
    \cf4 vector\cf3 <\cf4 pair\cf3 <\cf5 int\cf3 ,\cf5 int\cf3 >> testTargets = \{\cf4 make_pair\cf3 (\cf6 0\cf3 ,\cf6 0\cf3 ), \cf4 make_pair\cf3 (\cf6 1\cf3 ,\cf6 1\cf3 ), \cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 2\cf3 )\};\
    \cf7 Board\cf3  testBoard(\cf6 3\cf3 , \cf6 3\cf3 , testTargets, \cf4 make_pair\cf3 (\cf6 0\cf3 ,\cf6 0\cf3 ), \cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 0\cf3 ),\cf6 1\cf3 ,\cf6 3\cf3 ,\cf6 0\cf3 );\
    \cf2 //testBoard.printAllNodeInfo();\cf3 \
    \
    \cf4 vector\cf3 <\cf4 pair\cf3 <\cf5 int\cf3 ,\cf5 int\cf3 >> validStrat;\
    validStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 0\cf3 ));\
    validStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 1\cf3 ));\
    validStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 2\cf3 ));\
    validStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 1\cf3 ,\cf6 2\cf3 ));\
    validStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 1\cf3 ,\cf6 1\cf3 ));\
    validStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 1\cf3 ,\cf6 0\cf3 ));\
    validStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 0\cf3 ,\cf6 0\cf3 ));\
    \
    \cf4 vector\cf3 <\cf4 pair\cf3 <\cf5 int\cf3 ,\cf5 int\cf3 >> badStartStrat;\
    badStartStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 0\cf3 ,\cf6 0\cf3 ));\
    badStartStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 1\cf3 ,\cf6 1\cf3 ));\
    badStartStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 0\cf3 ,\cf6 0\cf3 ));\
    \
    \cf4 vector\cf3 <\cf4 pair\cf3 <\cf5 int\cf3 ,\cf5 int\cf3 >> badEndStrat;\
    badEndStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 0\cf3 ));\
    badEndStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 1\cf3 ,\cf6 0\cf3 ));\
    \
    \cf4 vector\cf3 <\cf4 pair\cf3 <\cf5 int\cf3 ,\cf5 int\cf3 >> badConStrat;\
    badConStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 0\cf3 ));\
    badConStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 1\cf3 ,\cf6 0\cf3 ));\
    badConStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 2\cf3 ,\cf6 1\cf3 ));\
    badConStrat.\cf4 push_back\cf3 (\cf4 make_pair\cf3 (\cf6 0\cf3 ,\cf6 0\cf3 ));\
\
    \
    \cf4 cout\cf3  << \cf6 "valid strategy is valid?..."\cf3  <<  testBoard.\cf7 validAStrat\cf3 (validStrat) << \cf6 "\\n"\cf3 ;\
    \cf4 cout\cf3  << \cf6 "bad start strat is valid?..."\cf3  <<  testBoard.\cf7 validAStrat\cf3 (badStartStrat) << \cf6 "\\n"\cf3 ;\
    \cf4 cout\cf3  << \cf6 "bad end strat is valid?..."\cf3  <<  testBoard.\cf7 validAStrat\cf3 (badEndStrat) << \cf6 "\\n"\cf3 ;\
    \cf4 cout\cf3  << \cf6 "bad con strat is valid?..."\cf3  <<  testBoard.\cf7 validAStrat\cf3 (badConStrat) << \cf6 "\\n"\cf3 ;\
\
    \
    \cf7 Attacker\cf3  attacker1(testBoard);\
    \cf4 cout\cf3  << \cf6 "celing for attacker1 is "\cf3  << attacker1.\cf7 getCeling\cf3 () << \cf6 "\\n"\cf3 ;\
    \cf4 cout\cf3  << \cf6 "valid strat val is "\cf3  << testBoard.\cf7 evalAStrat\cf3 (validStrat);}